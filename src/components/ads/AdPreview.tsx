'use client';

import { Copy, Check } from 'lucide-react';
import { useState } from 'react';
import { AdContent, AIProvider } from '@/types';
import { toast } from 'sonner';

interface AdPreviewProps {
  ad: AdContent;
  provider: AIProvider;
}

export function AdPreview({ ad, provider }: AdPreviewProps) {
  const [copiedField, setCopiedField] = useState<string | null>(null);

  const copyToClipboard = async (text: string, field: string) => {
    try {
      await navigator.clipboard.writeText(text);
      setCopiedField(field);
      toast.success(`${field} copied to clipboard!`);
      setTimeout(() => setCopiedField(null), 2000);
    } catch {
      toast.error('Failed to copy to clipboard');
    }
  };

  const providerLabels = {
    claude: 'Claude (Anthropic)',
    openai: 'GPT-4 (OpenAI)',
    gemini: 'Gemini (Google)',
  };

  return (
    <div className="space-y-4">
      <div className="flex items-center justify-between">
        <h2 className="text-2xl font-bold">Generated Ad</h2>
        <span className="text-sm text-gray-500 dark:text-gray-400">
          Generated by {providerLabels[provider]}
        </span>
      </div>

      <div className="bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-gray-800 dark:to-gray-900 rounded-xl p-6 space-y-6 border border-blue-100 dark:border-gray-700">
        {/* Hook */}
        <div className="space-y-2">
          <div className="flex items-center justify-between">
            <h3 className="font-semibold text-sm text-gray-700 dark:text-gray-300 uppercase tracking-wide">
              Hook
            </h3>
            <button
              onClick={() => copyToClipboard(ad.hook, 'Hook')}
              className="p-2 hover:bg-white/50 dark:hover:bg-gray-700 rounded-lg transition-colors"
              title="Copy hook"
            >
              {copiedField === 'Hook' ? (
                <Check className="w-4 h-4 text-green-600" />
              ) : (
                <Copy className="w-4 h-4 text-gray-600 dark:text-gray-400" />
              )}
            </button>
          </div>
          <p className="text-lg font-bold text-gray-900 dark:text-white leading-relaxed">
            {ad.hook}
          </p>
        </div>

        <div className="border-t border-blue-200 dark:border-gray-700" />

        {/* Body */}
        <div className="space-y-2">
          <div className="flex items-center justify-between">
            <h3 className="font-semibold text-sm text-gray-700 dark:text-gray-300 uppercase tracking-wide">
              Body
            </h3>
            <button
              onClick={() => copyToClipboard(ad.body, 'Body')}
              className="p-2 hover:bg-white/50 dark:hover:bg-gray-700 rounded-lg transition-colors"
              title="Copy body"
            >
              {copiedField === 'Body' ? (
                <Check className="w-4 h-4 text-green-600" />
              ) : (
                <Copy className="w-4 h-4 text-gray-600 dark:text-gray-400" />
              )}
            </button>
          </div>
          <p className="text-base text-gray-800 dark:text-gray-200 leading-relaxed whitespace-pre-wrap">
            {ad.body}
          </p>
        </div>

        <div className="border-t border-blue-200 dark:border-gray-700" />

        {/* CTA */}
        <div className="space-y-2">
          <div className="flex items-center justify-between">
            <h3 className="font-semibold text-sm text-gray-700 dark:text-gray-300 uppercase tracking-wide">
              Call to Action
            </h3>
            <button
              onClick={() => copyToClipboard(ad.cta, 'CTA')}
              className="p-2 hover:bg-white/50 dark:hover:bg-gray-700 rounded-lg transition-colors"
              title="Copy CTA"
            >
              {copiedField === 'CTA' ? (
                <Check className="w-4 h-4 text-green-600" />
              ) : (
                <Copy className="w-4 h-4 text-gray-600 dark:text-gray-400" />
              )}
            </button>
          </div>
          <p className="text-lg font-bold text-blue-600 dark:text-blue-400">
            {ad.cta}
          </p>
        </div>

        {/* Copy All */}
        <button
          onClick={() =>
            copyToClipboard(
              `${ad.hook}\n\n${ad.body}\n\n${ad.cta}`,
              'Complete Ad'
            )
          }
          className="w-full px-4 py-2 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 text-gray-900 dark:text-white font-medium rounded-lg border border-blue-200 dark:border-gray-600 transition-colors flex items-center justify-center gap-2"
        >
          {copiedField === 'Complete Ad' ? (
            <>
              <Check className="w-4 h-4" />
              Copied!
            </>
          ) : (
            <>
              <Copy className="w-4 h-4" />
              Copy Complete Ad
            </>
          )}
        </button>
      </div>
    </div>
  );
}
